#include <stdio.h>
#include <iostream>
#include "matmul.hpp"


int main() {

	//Pos0

float input_img3[n_inputs];
for (int i = 0; i < n_inputs; ++i) {
	input_img3[i] = 0.0;
}


//pos0
float input_img0[n_inputs] = {
		138.0,140.0,144.0,149.0,156.0,158.0,162.0,165.0,174.0,173.0,176.0,173.0,171.0,169.0,169.0,159.0,153.0,148.0,145.0,142.0,138.0,134.0,129.0,124.0,123.0,136.0,141.0,145.0,150.0,151.0,159.0,158.0,163.0,170.0,170.0,173.0,174.0,170.0,168.0,163.0,160.0,153.0,148.0,143.0,139.0,134.0,130.0,125.0,119.0,127.0,136.0,139.0,143.0,147.0,152.0,155.0,158.0,162.0,168.0,168.0,172.0,162.0,163.0,160.0,134.0,151.0,154.0,149.0,144.0,140.0,136.0,132.0,129.0,124.0,126.0,139.0,138.0,140.0,136.0,141.0,101.0,143.0,160.0,164.0,164.0,167.0,168.0,166.0,163.0,155.0,160.0,151.0,146.0,142.0,139.0,135.0,133.0,131.0,127.0,126.0,134.0,137.0,143.0,143.0,144.0,153.0,149.0,155.0,159.0,160.0,165.0,156.0,163.0,162.0,151.0,158.0,148.0,144.0,141.0,138.0,134.0,131.0,129.0,125.0,126.0,133.0,138.0,134.0,141.0,146.0,143.0,152.0,151.0,155.0,156.0,156.0,158.0,157.0,153.0,163.0,150.0,148.0,144.0,141.0,139.0,135.0,132.0,130.0,126.0,125.0,128.0,138.0,140.0,143.0,142.0,143.0,148.0,149.0,155.0,159.0,159.0,155.0,157.0,156.0,153.0,150.0,145.0,142.0,139.0,137.0,134.0,132.0,129.0,126.0,125.0,133.0,131.0,136.0,134.0,142.0,145.0,146.0,150.0,150.0,156.0,154.0,156.0,154.0,154.0,151.0,149.0,147.0,143.0,140.0,137.0,133.0,131.0,129.0,125.0,124.0,129.0,131.0,135.0,139.0,140.0,141.0,145.0,149.0,146.0,155.0,155.0,153.0,153.0,153.0,151.0,148.0,143.0,142.0,144.0,135.0,132.0,133.0,125.0,126.0,123.0,126.0,130.0,133.0,134.0,136.0,141.0,145.0,145.0,153.0,148.0,154.0,151.0,150.0,151.0,152.0,147.0,147.0,142.0,133.0,135.0,130.0,131.0,129.0,124.0,124.0,130.0,130.0,132.0,135.0,138.0,140.0,144.0,146.0,150.0,151.0,147.0,152.0,149.0,146.0,150.0,149.0,145.0,137.0,138.0,136.0,131.0,127.0,127.0,123.0,122.0,121.0,129.0,134.0,134.0,134.0,138.0,142.0,142.0,145.0,153.0,149.0,147.0,146.0,148.0,150.0,142.0,141.0,136.0,136.0,134.0,130.0,127.0,125.0,125.0,120.0,129.0,127.0,127.0,131.0,134.0,136.0,139.0,142.0,143.0,147.0,151.0,144.0,144.0,144.0,146.0,144.0,139.0,140.0,129.0,131.0,126.0,126.0,120.0,119.0,115.0,117.0,121.0,128.0,132.0,132.0,133.0,136.0,139.0,99.0,142.0,139.0,145.0,138.0,139.0,136.0,137.0,134.0,131.0,132.0,119.0,116.0,115.0,116.0,123.0,119.0,111.0,117.0,117.0,115.0,123.0,129.0,113.0,89.0,38.0,64.0,47.0,64.0,80.0,123.0,143.0,143.0,139.0,133.0,131.0,131.0,125.0,118.0,122.0,113.0,116.0,119.0,118.0,121.0,127.0,130.0,130.0,133.0,137.0,141.0,45.0,18.0,21.0,32.0,53.0,55.0,44.0,57.0,72.0,51.0,122.0,123.0,116.0,113.0,61.0,63.0,116.0,119.0,121.0,122.0,125.0,129.0,133.0,134.0,138.0,139.0,26.0,20.0,23.0,19.0,27.0,24.0,39.0,31.0,46.0,25.0,35.0,38.0,31.0,29.0,41.0,115.0,117.0,119.0,121.0,123.0,126.0,130.0,131.0,134.0,140.0,139.0,127.0,26.0,25.0,20.0,24.0,23.0,23.0,24.0,20.0,21.0,24.0,28.0,31.0,36.0,113.0,114.0,116.0,119.0,121.0,122.0,125.0,127.0,132.0,129.0,131.0,133.0,129.0,128.0,42.0,19.0,17.0,17.0,19.0,16.0,16.0,21.0,31.0,24.0,32.0,111.0,112.0,114.0,117.0,119.0,119.0,121.0,124.0,124.0,129.0,124.0,126.0,124.0,121.0,127.0,117.0,119.0,109.0,21.0,18.0,12.0,15.0,14.0,25.0,16.0,111.0,111.0,113.0,116.0,117.0,118.0,120.0,123.0,127.0,123.0,125.0,125.0,115.0,117.0,116.0,115.0,117.0,111.0,105.0,100.0,96.0,19.0,10.0,11.0,35.0,109.0,111.0,113.0,115.0,115.0,116.0,118.0,121.0,122.0,121.0,111.0,115.0,116.0,112.0,107.0,105.0,97.0,96.0,87.0,98.0,83.0,76.0,73.0,11.0,23.0,107.0,109.0,111.0,111.0,111.0,112.0,115.0,117.0,122.0,109.0,111.0,108.0,112.0,109.0,104.0,95.0,98.0,89.0,87.0,79.0,79.0,78.0,68.0,22.0,14.0,104.0,108.0,110.0,108.0,107.0,109.0,112.0,114.0,116.0,110.0,112.0,107.0,109.0,108.0,106.0,102.0,98.0,95.0,90.0,87.0,83.0,79.0,72.0,54.0,9.0,104.0,107.0,107.0,106.0,108.0,110.0,111.0,113.0,114.0,113.0,115.0,118.0,115.0,111.0,107.0,103.0,102.0,100.0,95.0,90.0,86.0,81.0,71.0,62.0,14.0
};
int  pred0 = nn_inference(input_img0);
std::cout << std::endl;
std::cout << "GT = 0, NN Prediction: " << pred0 << std::endl;
std::cout << std::endl;



//pos1
float input_img1[n_inputs] = {

		143.0,151.0,149.0,158.0,164.0,161.0,172.0,173.0,178.0,178.0,179.0,176.0,174.0,176.0,173.0,167.0,161.0,152.0,150.0,144.0,142.0,139.0,137.0,132.0,128.0,143.0,146.0,150.0,156.0,160.0,169.0,166.0,171.0,175.0,175.0,174.0,179.0,176.0,170.0,170.0,165.0,160.0,152.0,151.0,147.0,143.0,133.0,132.0,120.0,131.0,143.0,147.0,153.0,155.0,157.0,159.0,162.0,170.0,174.0,170.0,177.0,170.0,169.0,161.0,141.0,158.0,160.0,152.0,154.0,142.0,144.0,140.0,134.0,133.0,131.0,145.0,146.0,144.0,143.0,149.0,106.0,152.0,166.0,170.0,171.0,173.0,170.0,171.0,170.0,163.0,159.0,156.0,147.0,150.0,148.0,143.0,137.0,132.0,138.0,131.0,140.0,145.0,147.0,149.0,151.0,158.0,158.0,162.0,164.0,170.0,168.0,168.0,168.0,164.0,164.0,163.0,158.0,151.0,144.0,145.0,138.0,141.0,141.0,128.0,131.0,140.0,143.0,145.0,147.0,149.0,148.0,154.0,161.0,162.0,166.0,168.0,161.0,162.0,166.0,160.0,160.0,155.0,151.0,149.0,145.0,140.0,140.0,130.0,130.0,133.0,135.0,139.0,145.0,145.0,147.0,153.0,152.0,156.0,160.0,164.0,162.0,166.0,164.0,159.0,162.0,159.0,154.0,145.0,146.0,143.0,142.0,137.0,137.0,133.0,128.0,140.0,138.0,144.0,141.0,148.0,149.0,151.0,156.0,157.0,161.0,158.0,162.0,158.0,93.0,70.0,156.0,151.0,153.0,142.0,142.0,141.0,139.0,129.0,12.0,10.0,135.0,138.0,141.0,143.0,145.0,148.0,150.0,152.0,157.0,160.0,161.0,158.0,158.0,94.0,157.0,152.0,149.0,149.0,143.0,140.0,139.0,137.0,20.0,97.0,82.0,137.0,135.0,138.0,144.0,146.0,145.0,147.0,152.0,156.0,156.0,158.0,161.0,155.0,161.0,115.0,154.0,152.0,147.0,142.0,144.0,138.0,137.0,36.0,94.0,50.0,132.0,136.0,140.0,141.0,141.0,144.0,151.0,157.0,155.0,160.0,157.0,155.0,159.0,156.0,86.0,153.0,148.0,146.0,141.0,140.0,137.0,133.0,32.0,20.0,33.0,134.0,137.0,139.0,140.0,142.0,146.0,147.0,144.0,153.0,161.0,154.0,151.0,152.0,149.0,21.0,152.0,147.0,143.0,142.0,138.0,136.0,130.0,72.0,80.0,45.0,130.0,131.0,135.0,140.0,142.0,143.0,146.0,151.0,151.0,147.0,156.0,154.0,149.0,53.0,41.0,147.0,144.0,142.0,138.0,135.0,129.0,135.0,71.0,53.0,33.0,125.0,129.0,134.0,137.0,138.0,139.0,142.0,145.0,146.0,149.0,145.0,141.0,143.0,42.0,47.0,141.0,137.0,140.0,131.0,126.0,125.0,113.0,125.0,51.0,44.0,121.0,123.0,124.0,126.0,130.0,132.0,122.0,110.0,152.0,153.0,145.0,156.0,152.0,47.0,45.0,147.0,146.0,138.0,134.0,130.0,128.0,128.0,125.0,51.0,22.0,126.0,127.0,129.0,133.0,137.0,140.0,142.0,143.0,148.0,145.0,150.0,141.0,69.0,28.0,48.0,139.0,138.0,135.0,131.0,127.0,128.0,30.0,30.0,14.0,13.0,124.0,126.0,128.0,130.0,132.0,135.0,139.0,142.0,147.0,144.0,141.0,143.0,37.0,56.0,39.0,132.0,139.0,64.0,40.0,49.0,59.0,58.0,35.0,13.0,20.0,122.0,123.0,126.0,128.0,130.0,133.0,137.0,139.0,136.0,139.0,142.0,134.0,38.0,52.0,21.0,61.0,58.0,47.0,46.0,44.0,54.0,57.0,51.0,27.0,42.0,119.0,122.0,124.0,126.0,128.0,130.0,133.0,136.0,143.0,136.0,134.0,137.0,68.0,24.0,53.0,35.0,34.0,47.0,36.0,43.0,56.0,44.0,48.0,50.0,28.0,118.0,120.0,123.0,125.0,126.0,128.0,130.0,132.0,134.0,135.0,130.0,131.0,31.0,19.0,23.0,31.0,27.0,25.0,35.0,37.0,39.0,59.0,44.0,45.0,46.0,117.0,119.0,122.0,124.0,125.0,126.0,128.0,130.0,131.0,132.0,131.0,131.0,25.0,29.0,20.0,15.0,18.0,27.0,30.0,41.0,13.0,19.0,56.0,36.0,40.0,117.0,119.0,122.0,123.0,124.0,126.0,128.0,129.0,132.0,124.0,122.0,125.0,123.0,122.0,25.0,17.0,14.0,12.0,13.0,25.0,51.0,22.0,15.0,28.0,57.0,117.0,118.0,121.0,122.0,123.0,124.0,126.0,128.0,124.0,125.0,123.0,126.0,119.0,112.0,112.0,100.0,112.0,101.0,96.0,22.0,31.0,47.0,30.0,16.0,17.0,114.0,116.0,118.0,119.0,120.0,121.0,123.0,125.0,122.0,122.0,119.0,125.0,119.0,106.0,97.0,96.0,101.0,99.0,86.0,25.0,20.0,29.0,48.0,41.0,24.0,110.0,116.0,116.0,116.0,117.0,118.0,121.0,122.0,119.0,118.0,118.0,119.0,113.0,103.0,99.0,95.0,94.0,91.0,84.0,79.0,23.0,16.0,24.0,45.0,43.0
};
int  pred1 = nn_inference(input_img1);
std::cout << std::endl;
std::cout << "GT= 1, NN Prediction: " << pred1 << std::endl;
std::cout << std::endl;



return 0;
}
